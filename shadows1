#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
 
using namespace std;
 
/**
 * Auto-generated code below aims at helping you parse
 * the standard input according to the problem statement.
 **/
 
int main()
{
    int W; // width of the building.
    int H; // height of the building.
    cin >> W >> H; cin.ignore();
    int N; // maximum number of turns before game over.
    cin >> N; cin.ignore();
    int X0;
    int Y0;
    cin >> X0 >> Y0; cin.ignore();
 
    // game loop
        int y_min=0;
        int y_max=H;
        int x_min=0;
        int x_max=W;
    while (1) {
        string bombDir; // the direction of the bombs from batman's current location (U, UR, R, DR, D, DL, L or UL)
        cin >> bombDir; cin.ignore();
 
        // Write an action using cout. DON'T FORGET THE "<< endl"
        // To debug: cerr << "Debug messages..." << endl;
 
 
        // the location of the next window Batman should jump to.
        int x;
        int y;
        if(bombDir=="R" || bombDir=="UR"||bombDir=="DR")
        {
            x=X0+((x_max-X0)/2);
            x_min=X0;
        }
       
        else if (bombDir=="L"||bombDir=="UL"||bombDir=="DL")
        {
            x=x_min+((X0-x_min)/2);
            x_max=X0;
        }
        if(bombDir=="D"||bombDir=="DR"||bombDir=="DL")
        {
            y=Y0+((y_max-Y0)/2);
            y_min=Y0;
        }
        else if (bombDir=="U"||bombDir=="UR"||bombDir=="UL")
        {
            y=y_min+((Y0-y_min)/2);
            y_max=Y0;
        }
        X0=x;
        Y0=y;
        cerr<<"bombDir "<<bombDir<<" "<<W<<" "<<H<<endl;
   
        cout <<x<<" "<<y<< endl;
    }
}
